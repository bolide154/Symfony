<?php

namespace Acme\Bundle\BlogBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Mapping as ORM;

/**
 * ProductRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProductRepository extends EntityRepository
{
    public function findAllProduct(){        
        $stmt = $this->getEntityManager()
        ->getConnection()
        ->prepare('SELECT * FROM symfony.`product`');
        $stmt->execute();
        return $stmt->fetchAll();
    }
    
    public function updateProduct($product, $product_id){
        
        $sql = "UPDATE symfony.`product` SET name='".$product['name']."'";
        if($product['description']){
            $sql .= ", description='".$product['description']."'";
        }
        if($product['image_url']){
            $sql .= ", image_url='".$product['image_url']."'";
        }
        if($product['quantity']){
            $sql .= ", quantity='".$product['quantity']."'";
        }
        if($product['category_id']){
            $sql .= ", category_id='".$product['category_id']."'";
        }
        if($product['price']){
            $sql .= ", price='".$product['price']."'";
        }
        if($product_id){
            $sql .= "WHERE id=".$product_id;
        }
        else{
            return;
        }
        $conn = $this->getEntityManager()->getConnection();
    	$stmt = $conn->prepare($sql);
    	$stmt->execute();
    }
    
    public function findProductById($product_id){
        
        $sql = "SELECT * FROM symfony.`product` WHERE  id=".$product_id;
        $conn = $this->getEntityManager()->getConnection();
    	$stmt = $conn->prepare($sql);
    	$stmt->execute();
        return $stmt->fetch();
    }
}
